/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medi.ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import medi.nf.BD;
import medi.nf.DM;
import medi.nf.Observation;
import medi.nf.OperationInfirmiere;
import medi.nf.Patient;
import medi.nf.Prescription;
import medi.nf.Resultat;

/**
 *
 * @author CRISTANTE
 */
public class AfficherDetailDM extends javax.swing.JFrame {

    /**
     * Creates new form AfficherDetailDM
     */
    BD connect;
    DM dm;
    Patient p;
    ArrayList<Prescription> pres;
    ArrayList<Observation> obs;
    ArrayList<Resultat> res;
    ArrayList<OperationInfirmiere> opinf;
    DefaultTableModel result;

    public AfficherDetailDM(DM dm) {
        initComponents();
        result = (DefaultTableModel) prescTable.getModel();
        SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
        this.dm = dm;
        connect = new BD();
        p = dm.getP();
        pres = connect.getPrescription(dm.getIddm());
        obs = connect.getObservation(dm.getIddm());
        opinf = connect.getOperationInfirmiere(dm.getIddm());
        res = connect.getResultat(dm.getIddm());
        if (p.getSexe().equals("Femme")) {
            idpat.setText(p.getNom() + " " + p.getPrenom() + " - Née le " + format.format(p.getDate()));
        } else {
            idpat.setText(p.getNom() + " " + p.getPrenom() + " - Né le " + format.format(p.getDate()));
        }
        date.setText(dm.getDate().toString());
        medref.setText(dm.getMedref().getNom() + " " + dm.getMedref().getPrenom() + " - " + dm.getMedref().getSpecialite());
        iddm.setText(String.valueOf(dm.getIddm()));

        
        
        for (int i = 0; i < pres.size(); i++) {
            result.addRow(new Object[]{pres.get(i).getPrescription(), pres.get(i).getDate(), pres.get(i).getPrescripteur().getNom() + " " + pres.get(i).getPrescripteur().getPrenom() + " - " + pres.get(i).getPrescripteur().getSpecialite()});
        }
        prescTable.setModel(result);
        prescTable.repaint();

        
        
       
        /*result.setRowCount(0);
        for (int i = 0; i < res.size(); i++) {
            result.addRow(new Object[]{res.get(i).getResultat(), res.get(i).getDate(), res.get(i).getPrescripteur().getNom() + " " + res.get(i).getPrescripteur().getPrenom() + " - " + res.get(i).getPrescripteur().getSpecialite()});
        }
        resTable.setModel(result);
        resTable.repaint();

        
        
        
        result.setRowCount(0);
        for (int i = 0; i < opinf.size(); i++) {
            result.addRow(new Object[]{opinf.get(i).getOperationInfirmiere(), opinf.get(i).getDate(), opinf.get(i).getPrescripteur().getNom() + " " + opinf.get(i).getPrescripteur().getPrenom() + " - " + opinf.get(i).getPrescripteur().getSpecialite()});
        }
        opinfTable.setModel(result);
        opinfTable.repaint();

        
        
        
        result.setRowCount(0);
        for (int i = 0; i < obs.size(); i++) {
            result.addRow(new Object[]{obs.get(i).getObservation(), obs.get(i).getDate(), obs.get(i).getPrescripteur().getNom() + " " + obs.get(i).getPrescripteur().getPrenom() + " - " + obs.get(i).getPrescripteur().getSpecialite()});
        }
        obsTable.setModel(result);
        obsTable.repaint();*/

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nomField1 = new javax.swing.JLabel();
        idpat = new javax.swing.JLabel();
        nomField2 = new javax.swing.JLabel();
        nomField3 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        medref = new javax.swing.JLabel();
        nomField4 = new javax.swing.JLabel();
        iddm = new javax.swing.JLabel();
        iddm1 = new javax.swing.JLabel();
        iddm2 = new javax.swing.JLabel();
        iddm3 = new javax.swing.JLabel();
        Résultats = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        obsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        opinfTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        prescTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        resTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nomField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomField1.setForeground(new java.awt.Color(102, 102, 102));
        nomField1.setText("Dossier Médical de");

        idpat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idpat.setForeground(new java.awt.Color(102, 102, 102));
        idpat.setText("jLabel1");

        nomField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomField2.setForeground(new java.awt.Color(102, 102, 102));
        nomField2.setText("Date :");

        nomField3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomField3.setForeground(new java.awt.Color(102, 102, 102));
        nomField3.setText("Médecin référent :");

        date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        date.setForeground(new java.awt.Color(102, 102, 102));
        date.setText("date");

        medref.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        medref.setForeground(new java.awt.Color(102, 102, 102));
        medref.setText("medref");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nomField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idpat))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nomField2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date)
                        .addGap(141, 141, 141)
                        .addComponent(nomField3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(medref)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idpat)
                    .addComponent(nomField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomField2)
                    .addComponent(nomField3)
                    .addComponent(date)
                    .addComponent(medref)))
        );

        nomField4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomField4.setForeground(new java.awt.Color(102, 102, 102));
        nomField4.setText("ID du DM : ");

        iddm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        iddm.setForeground(new java.awt.Color(102, 102, 102));
        iddm.setText("iddm");

        iddm1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        iddm1.setForeground(new java.awt.Color(102, 102, 102));
        iddm1.setText("Observations");

        iddm2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        iddm2.setForeground(new java.awt.Color(102, 102, 102));
        iddm2.setText("Opérations infirmières");

        iddm3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        iddm3.setForeground(new java.awt.Color(102, 102, 102));
        iddm3.setText("Prescriptions");

        Résultats.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Résultats.setForeground(new java.awt.Color(102, 102, 102));
        Résultats.setText("Résultat");

        obsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Observation", "Date", "Médecin prescripteur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(obsTable);

        opinfTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Opération infirmière", "Date", "Médecin prescripteur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(opinfTable);

        prescTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prescription", "Date", "Médecin prescripteur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(prescTable);

        resTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Résultat", "Date", "Médecin prescripteur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(resTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomField4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iddm))
                    .addComponent(iddm1)
                    .addComponent(Résultats)
                    .addComponent(iddm2)
                    .addComponent(iddm3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomField4)
                    .addComponent(iddm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iddm1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(iddm2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(iddm3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(Résultats)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AfficherDetailDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AfficherDetailDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AfficherDetailDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AfficherDetailDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Résultats;
    private javax.swing.JLabel date;
    private javax.swing.JLabel iddm;
    private javax.swing.JLabel iddm1;
    private javax.swing.JLabel iddm2;
    private javax.swing.JLabel iddm3;
    private javax.swing.JLabel idpat;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel medref;
    private javax.swing.JLabel nomField1;
    private javax.swing.JLabel nomField2;
    private javax.swing.JLabel nomField3;
    private javax.swing.JLabel nomField4;
    private javax.swing.JTable obsTable;
    private javax.swing.JTable opinfTable;
    private javax.swing.JTable prescTable;
    private javax.swing.JTable resTable;
    // End of variables declaration//GEN-END:variables
}
